<style lang="less">
page {
    background: #fafafa;
}

.container{
    padding-top: 150rpx;
}

.navBar {
    position: fixed;
    top: 0;
    z-index: 98;
}

.userinfo-container {
    width: 100%;
    position: fixed;
    top: 147rpx;
    z-index: 99;
}

.userinfo-content {
    width: 100%;
    height: 360rpx;
    margin-bottom: 20rpx;
    padding-top: 20rpx;
    text-align: center;
    background: #ffffff;
    box-sizing: border-box;
    //border-bottom: 1rpx solid #d2d2d2;
    box-shadow: 0 1rpx 1rpx #a8a7a7;
}

.userinfo-avatar {
    width: 150rpx;
    height: 150rpx;
    margin: 30rpx auto;
    display: block;
}

.userinfo-getbtn {
    width: 600rpx;
    height: 80rpx;
    color: #b28850;
    font-size: 32rpx;
    line-height: 80rpx;
    border: 1rpx solid #d1c0a5;
    background-color: #ffffff;
}

.userinfo-getbtn:hover{
    opacity: 0.7;
}

.userinfo-nickname {
    font-size: 32rpx;
    line-height: 60rpx;
    display: block;
}

.userinfo-desc {
    height: 60rpx;
    font-size: 32rpx;
    line-height: 60rpx;
    color: #888888;
    vertical-align: top;
    display: inline-block;
}

.userinfo-edit {
    width: 500rpx;
    border-bottom: 1rpx solid #d1c0a5;
    box-sizing: border-box;
}

.userinfo-setbtn {
    width: 60rpx;
    height: 60rpx;
    margin: none;
    margin-left: 20rpx;
    padding: 10rpx 0;
    border: none;
    background-color: #ffffff;
    display: inline-block;
    box-sizing: border-box;
}

.userinfo-setbtn image {
    width: 40rpx;
    height: 40rpx;
    vertical-align: top;
}

.userinfo-setbtn:hover {
    background: #ffffff;
    opacity: 0.5;
}

.user-items {
    width: 100%;
    background: #ffffff;
    font-size: 32rpx;
    line-height: 80rpx;
    margin: 40rpx 0;
    border-top: 1rpx solid #d2d2d2;
    border-bottom: 1rpx solid #d2d2d2;
    box-sizing: border-box;
}

.userItem-content {
    width: 100%;
    height: 80rpx;
    background: #ffffff;
    padding-left: 40rpx;
    box-sizing: border-box;
}

.userItem-content:not(:first-child) .userItem-details {
    border-top: 1rpx solid #d2d2d2;
}

.user-navto {
    width: 30rpx;
    height: 30rpx;
    float: right;
    margin: 25rpx 40rpx;
}

.userItem-balance {
    font-size: 30rpx;
    color: #888888;
    margin-left: 30rpx;
}

.teamLogo {
    width: 100%;
    text-align: center;
    color: #888888;
    font-size: 28rpx;
    position: absolute;
    bottom: 20rpx;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="我的"></navBar>
        <view class="userinfo-container">
        <view class="userinfo-content">
            <block wx:if="{{hasUserInfo === false}}">
                <image class="userinfo-avatar" src="/icons/logo.png">
                    <button class="userinfo-getbtn" open-type="getUserInfo" bindgetuserinfo="getUserInfoFun">获取用户信息</button>
            </block>
            <block wx:if="{{hasUserInfo === true}}">
                <image class="userinfo-avatar" src="{{userInfos.avatarUrl}}">
                    <text class="userinfo-nickname">{{userInfos.nickName}}</text>
                    <block wx:if="{{isEditing === false}}">
                        <text class="userinfo-desc">{{userDesc === '' ? '这家伙比较懒，什么都没有写……' : userDesc}}</text>
                        <view class="userinfo-setbtn" @tap="descEdit">
                            <image src="/icons/ic_edit.png">
                        </view>
                    </block>
                    <block wx:else>
                        <form bindsubmit="descSave">
                            <input type="text" name="desc" class="userinfo-desc userinfo-edit" value="{{userDesc}}">
                            <button class="userinfo-setbtn" form-type="submit">
                                <image src="/icons/ic_edit.png">
                            </button>
                        </form>
                    </block>
            </block>
        </view>
        <view class="user-items">
            <navigator class="userItem-content">
                <view class="userItem-details">
                    <text>我的订单</text>
                    <image class="user-navto" src="/icons/ic_path.png">
                </view>
            </navigator>
            <navigator class="userItem-content">
                <view class="userItem-details">
                    <text>我的钱包</text>
                    <text class="userItem-balance">余额：0</text>
                    <image class="user-navto" src="/icons/ic_path.png">
                </view>
            </navigator>
            <navigator class="userItem-content">
                <view class="userItem-details">
                    <text>我的收藏</text>
                    <image class="user-navto" src="/icons/ic_path.png">
                </view>
            </navigator>
        </view>
        <navigator class="user-items userItem-content user-identify">
            <text>资历认证</text>
            <image class="user-navto" src="/icons/ic_path.png">
        </navigator>
        </view>
        <view class="teamLogo">
            <text>©本事 Benshi</text>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';
import { SYSTEM_INFO, USER_SPECICAL_INFO, USER_INFO } from '@/utils/constant';

export default class Index extends wepy.page {
    config = {};
    components = {
        navBar: NavBar
    };

    data = {
        hasUserInfo: false,
        userInfos: {
            nickName: ''
        },
        isEditing: false,
        userDesc: ''
    };

    //   async onLoad() {
    //     let res = await wepy.getSetting()
    //     //检验是否已授权
    //     if ((res.authSetting)['scope.userInfo']) {
    //       wepy.switchTab({
    //         url: '/pages/index/index'
    //       })
    //     }
    //   }

    methods = {
        getUserInfoFun() {
            // if (e.detail.errMsg == 'getUserInfo:ok') {
            //   let res = await wepy.login();
            //   if (res.code) {
            //     wepy.setStorageSync(USER_INFO, e.detail.userInfo);
            //     let systemInfo = wepy.getSystemInfoSync();
            //     wepy.setStorageSync(SYSTEM_INFO, systemInfo);
            //     let rlt = await api.wxJsCode2Session({
            //       query: {
            //         jsCode: res.code,
            //         nickName: e.detail.userInfo.nickName
            //       }
            //     })
            //   if (rlt.data.result) {
            //       let data = rlt.data;
            //       if (data.data.openid) {
            //         wepy.setStorageSync(USER_SPECICAL_INFO, data.data);
            //         wepy.switchTab({
            //           url: '/pages/index/index'
            //         })
            //       }
            //     } else {
            //       let res = await wepy.showModal({
            //         title: 'appid有误',
            //         content: '授权失败'
            //       })
            //       if (res.confirm) {
            //         wepy.switchTab({
            //           url: '/pages/home'
            //         })
            //       }
            //     }

            //   }
            // }

            // wx.authorize({
            //     scope: 'scope.userInfo',
            //     success() {
            //         let self = this;
            //         this.$parent.getUserInfo(function(userInfo) {
            //             if (userInfo) {
            //                 self.userInfo = userInfo;
            //             }
            //             self.hasUserInfo = true;
            //             self.$apply();
            //         });
            //     }
            // });
            let self = this;
            wepy.showModal({
                title: '授权',
                content: '需要获取你的头像和昵称',
                success: function(res) {
                    if (res.confirm) {
                        console.log('success');
                        // let self = this;
                        wepy.getUserInfo({
                            success: function(res) {
                                console.log('userInfo:' + res.userInfo); //do anything
                                self.userInfos = res.userInfo;
                                // console.log(self.userInfos.nickName);
                                // console.log(self.userInfos.avatarUrl)
                                self.$apply();
                            }
                        });

                        self.hasUserInfo = true;
                    } else if (res.cancel) {
                        console.log('fail');
                    }
                }
            });

            // let self = this;
            // wepy.getUserInfo({
            //     success: function(res) {
            //         console.log('userInfo:' + res.userInfo); //do anything
            //         self.userInfos = res.userInfo;
            //         // console.log(self.userInfos.nickName);
            //         // console.log(self.userInfos.avatarUrl)
            //         self.$apply();
            //     }
            // });

            // self.hasUserInfo = true;
            self.$apply();

            // let self = this;
            // this.$parent.getUserInfo(function(userInfo) {
            //     if (userInfo) {
            //         self.userInfo = userInfo;
            //     }
            //     self.hasUserInfo = true;
            //     self.$apply();
            // });
        },

        descEdit() {
            this.isEditing = true;
        },

        descSave(e) {
            this.isEditing = false;
            this.userDesc = e.detail.value.desc;
        }
    };

    events = {};

    onLoad() {}
}
</script>
