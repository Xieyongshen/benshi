<style lang="less">
.container {
    padding-top: 150rpx;
    padding-bottom: 140rpx;
}

.order-status {
    width: 750rpx;
    height: 150rpx;
    color: #ffffff;
    font-size: 36rpx;
    line-height: 150rpx;
    padding: 0 30rpx;
    box-sizing: border-box;
    background: #dbc29c;
}

.status-cancel {
    background: #535353;
}

.order-content {
    width: 750rpx;
    margin-top: 30rpx;
    background: #ffffff;
}

.order-seller {
    width: 750rpx;
    height: 130rpx;
    padding: 30rpx 30rpx 20rpx 30rpx;
    box-sizing: border-box;
}

.seller-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
}

.seller-name {
    font-size: 36rpx;
    line-height: 60rpx;
    vertical-align: top;
    margin-top: 20rpx;
    margin-left: 30rpx;
    display: inline-block;
}

.order-service {
    width: 750rpx;
    color: #434343;
    padding: 20rpx 30rpx;
    border-top: 1rpx solid #d2d2d2;
    box-sizing: border-box;
}

.service-img {
    width: 200rpx;
    height: 200rpx;
}

.service-name {
    font-size: 36rpx;
    line-height: 50rpx;
    margin-left: 40rpx;
    vertical-align: top;
    display: inline-block;
}

.service-price {
    font-size: 38rpx;
    float: right;
    text {
        font-size: 30rpx;
    }
}

.order-detail {
    width: 750rpx;
    color: #434343;
    font-size: 32rpx;
    line-height: 50rpx;
    margin-top: 30rpx;
    padding: 30rpx;
    background: #ffffff;
    box-sizing: border-box;
}

.order-handle {
    width: 750rpx;
    height: 110rpx;
    padding: 20rpx 30rpx;
    border-top: 1rpx solid #d2d2d2;
    background: #ffffff;
    box-sizing: border-box;
    position: fixed;
    bottom: 0;
}

.order-btn {
    height: 70rpx;
    font-size: 34rpx;
    line-height: 68rpx;
    padding: 0 30rpx;
    border-radius: 10rpx;
    box-sizing: border-box;
    float: right;
}

.order-cancel,
.order-delete {
    color: #535353;
    border: 1rpx solid #535353;
}

.order-cancel:hover,
.order-delete:hover {
    color: #ffffff;
    background: #535353;
}

.order-confirm,
.order-comment {
    color: #b28850;
    border: 1rpx solid #cfa972;
}

.order-confirm:hover,
.order-comment:hover {
    color: #ffffff;
    background: #cfa972;
}

.comment-form {
    width: 750rpx;
    margin-top: 30rpx;
    padding: 30rpx;
    background: #ffffff;
    box-sizing: border-box;
    display: inline-block;
}

.comment-input {
    width: 690rpx;
    height: 200rpx;
    color: #434343;
    font-size: 32rpx;
    line-height: 50rpx;
    padding: 20rpx;
    border: 1rpx solid #cfa972;
    border-radius: 10rpx;
    box-sizing: border-box;
    display: inline-block;
}

.comment-submit {
    font-size: 34rpx;
    line-height: 68rpx;
    margin: 20rpx;
    padding: 0 30rpx;
    border-radius: 10rpx;
    box-sizing: border-box;
    float: right;
}

.comment-detail {
    width: 750rpx;
    color: #434343;
    font-size: 32rpx;
    line-height: 50rpx;
    margin-top: 30rpx;
    padding: 30rpx;
    background: #ffffff;
    box-sizing: border-box;
}

.comment-time {
    color: #888888;
    font-size: 32rpx;
    line-height: 60rpx;
    margin-top: 20rpx;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="订单详情" isChildPage="y"></navBar>
        <view class="order-status {{orderContent.order.orderStatus == 4 ? 'status-cancel' : ''}}">{{status[orderContent.order.orderStatus]}}</view>
        <view class="order-content">
            <view class="order-seller">
                <image class="seller-avatar" src="{{orderContent.order.sellerAvatar}}">
                    <view class="seller-name">{{orderContent.order.sellerName}}</view>
            </view>
            <view class="order-service">
                <image src="{{orderContent.order.servicePic}}" mode="aspectFill" class="service-img">
                    <text class="service-name">{{orderContent.order.serviceName}}</text>
                    <view class="service-price">
                        <text>￥</text>{{orderContent.order.servicePrice}}</view>
            </view>
        </view>
        <view class="order-detail">
            <view>订单编号：{{orderID}}</view>
            <view>创建时间：{{orderContent.order.createTime}}</view>
            <view wx:if="{{orderContent.order.orderStatus > 0}}">服务时间：{{orderContent.order.serviceTime}}</view>
            <view wx:if="{{orderContent.order.orderStatus > 1}}">完成时间：{{orderContent.order.completeTime}}</view>
        </view>
        <view class="comment-content">
            <form wx:if="{{showComment}}" class="comment-form" bindsubmit="commentSubmit">
                <textarea name="comment" auto-focus="{{showComment}}" class="comment-input">
                    <button class="comment-submit" form-type="submit">提交评价</button>
            </form>
            <view wx:if="{{orderContent.order.orderStatus == 3}}" class="comment-detail">
                <view class="comment-desc">{{orderContent.comment.desc}}</view>
                <view class="comment-time">{{orderContent.comment.time}}</view>
            </view>
        </view>
        <view class="order-handle">
            <view wx:if="{{orderContent.order.orderStatus == 0}}" class="order-cancel order-btn" @tap.stop="cancelOrder">取消订单</view>
            <view wx:if="{{orderContent.order.orderStatus == 1}}" class="order-confirm order-btn" @tap.stop="confirmOrder">确认服务</view>
            <view wx:if="{{orderContent.order.orderStatus == 2}}" class="order-comment order-btn" @tap.stop="commentOrder">评价服务</view>
            <view wx:if="{{orderContent.order.orderStatus >= 3}}" class="order-delete order-btn" @tap.stop="deleteOrder">删除订单</view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';

export default class Success extends wepy.page {
    config = {};
    components = {
        navBar: NavBar
    };

    data = {
        showComment: false,
        status: ['等待服务', '等待确认', '等待评价', '交易成功', '交易取消'],
        orderID: '',
        orderContent: {
            order: {
                orderStatus: 0,
                sellerAvatar: '',
                sellerName: '',
                serviceName: '',
                servicePrice: 0,
                servicePic: '',
                createTime: '',
                serviceTime: '',
                completeTime: ''
            },
            comment: {}
        }
    };

    computed = {};

    methods = {
        commentOrder() {
            this.showComment = !this.showComment;
            this.$apply();
        },

        commentSubmit(e) {
            console.log(e.detail.value);
            let self = this;
            var jwt = wx.getStorageSync('jwt');
            if (jwt.data.access_token != null) {
                let res = api.submitComment({
                    query: {
                        access_token: jwt.data.access_token,
                        account_id: jwt.data.account_id,
                        orderId: self.orderID,
                        commentDes: 'lalalal',
                        commentType: 1
                    },
                    method: 'POST',
                    header: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    }
                });
                console.log(res);

                self.$apply();
            }
        },

        cancelOrder() {
            var self = this;
            wx.showModal({
                title: '取消订单',
                content: '订单尚未服务，确认取消当前订单吗？',
                success: function(res) {
                    if (res.confirm) {
                        console.log('cancel success');
                        self.orderContent.order.orderStatus = 4;
                        var jwt = wx.getStorageSync('jwt');
                        if (jwt.data.access_token != null) {
                            console.log(jwt.data.account_id);
                            let res = api.changeOrderStatus({
                                query: {
                                    access_token: jwt.data.access_token,
                                    account_id: jwt.data.account_id,
                                    orderId: self.orderID,
                                    orderStatus:
                                        self.orderContent.order.orderStatus
                                },
                                method: 'POST',
                                header: {
                                    'Content-Type':
                                        'application/x-www-form-urlencoded'
                                }
                            });
                            console.log(res);

                            self.$apply();
                        }
                        self.$apply();
                    } else if (res.cancel) {
                        console.log('cancel');
                    }
                }
            });
        },

        confirmOrder() {
            var self = this;
            wx.showModal({
                title: '确认订单',
                content: '确认已经收到服务，完成当前订单吗？',
                success: function(res) {
                    if (res.confirm) {
                        console.log('confirm success');
                        self.orderContent.order.orderStatus = 3;
                        var jwt = wx.getStorageSync('jwt');
                        if (jwt.data.access_token != null) {
                            console.log(jwt.data.account_id);
                            let res = api.changeOrderStatus({
                                query: {
                                    access_token: jwt.data.access_token,
                                    account_id: jwt.data.account_id,
                                    orderId: self.orderID,
                                    orderStatus:
                                        self.orderContent.order.orderStatus
                                },
                                method: 'POST',
                                header: {
                                    'Content-Type':
                                        'application/x-www-form-urlencoded'
                                }
                            });
                            console.log(res);

                            self.$apply();
                        }
                        self.$apply();
                    } else if (res.cancel) {
                        console.log('confirm cancel');
                    }
                }
            });
        },

        deleteOrder(index, event) {
            var self = this;
            wx.showModal({
                title: '删除订单',
                content: '确认删除当前订单吗？',
                success: function(res) {
                    if (res.confirm) {
                        console.log('delete success');
                        var jwt = wx.getStorageSync('jwt');
                        if (jwt.data.access_token != null) {
                            let res = api.deleteTheOrder({
                                query: {
                                    access_token: jwt.data.access_token,
                                    account_id: jwt.data.account_id,
                                    orderId: self.orderID
                                },
                                method: 'POST',
                                header: {
                                    'Content-Type':
                                        'application/x-www-form-urlencoded'
                                }
                            });
                            console.log(res);

                            self.$apply();
                        }
                        wx.navigateBack({
                            delta: 1
                        });
                        self.$apply();
                    } else if (res.cancel) {
                        console.log('delete cancel');
                    }
                }
            });
        }
    };

    async onLoad(options) {
        this.orderID = options.orderID;
        if (options.comment == 1) {
            this.showComment = true;
        }
        this.$apply();

        var jwt = wx.getStorageSync('jwt');
        let self = this;
        if (jwt.data.access_token != null) {
            console.log(jwt.data.account_id);
            let res = await api.getOrderDetail({
                query: {
                    access_token: jwt.data.access_token,
                    account_id: jwt.data.account_id,
                    orderId: this.orderID
                }
            });
            console.log(res);
            self.orderContent = res.data;
            self.$apply();
        }
    }
}
</script>