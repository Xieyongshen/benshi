<style lang="less">
.container {
    padding-top: 380rpx;
}

.search-container {
    width: 100%;
    padding: 20rpx 0;
    background-color: #ffffff;
    position: fixed;
    top: 147rpx;
    z-index: 99;
}

.search_content {
    width: 690rpx;
    height: 70rpx;
    margin: 0 auto;
    padding: 0 30rpx;
    color: #8c877e;
    text-align: left;
    background: #e5e5e5;
    opacity: 0.5;
    border-radius: 52rpx;
    box-sizing: border-box;
}

.search-icon {
    height: 70rpx;
    line-height: 70rpx;
    padding: 20rpx 0;
    box-sizing: border-box;
    vertical-align: top;
}

.search_input {
    font-size: 32rpx;
    line-height: 70rpx;
    display: inline-block;
    vertical-align: top;
    margin-left: 20rpx;
}

.label-follow {
    width: 100%;
    height: 100rpx;
    background: #ffffff;
    padding: 10rpx 30rpx 20rpx 30rpx;
    box-sizing: border-box;
    box-shadow: 0 1rpx 1rpx #a8a7a7;
    position: fixed;
    top: 250rpx;
    z-index: 99;
}

.follow-btn {
    height: 70rpx;
    font-size: 34rpx;
    line-height: 70rpx;
    padding: 0 30rpx;
    border-radius: 10rpx;
    background: #ffffff;
    box-sizing: border-box;
    float: right;
    .fa-plus {
        font-weight: 100;
    }
}

.follow-no {
    color: #b28850;
    border: 1rpx solid #d1c0a5;
}

.follow-no:hover {
    color: #ffffff;
    background: #d1c0a5;
}

.follow-yes {
    color: #888888;
    border: 1rpx solid #888888;
}

.follow-yes:hover {
    color: #ffffff;
    background: #888888;
}

.label-content {
    background: #ffffff;
    border-top: 1rpx solid #e5e5e5;
}

.label-items {
    width: 100%;
    padding-left: 40rpx;
    box-sizing: border-box;
    position: relative;
}

.item-avatar {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    position: absolute;
    top: 40rpx;
    left: 40rpx;
}

.item-content {
    width: 710rpx;
    max-height: 700rpx;
    padding: 30rpx 40rpx 30rpx 130rpx;
    border-bottom: 1rpx solid #e5e5e5;
    box-sizing: border-box;
}

.item-tag {
    width: 540rpx;
    font-size: 36rpx;
    line-height: 50rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.item-detail {
    width: 540rpx;
    font-size: 32rpx;
    line-height: 50rpx;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.item-userdesc {
    font-size: 32rpx;
    line-height: 50rpx;
    color: #7d7d7d;
    margin-left: 20rpx;
    display: inline-block;
}

.item-desc {
    width: 540rpx;
    height: 150rpx;
    color: #434343;
    font-size: 32rpx;
    line-height: 50rpx;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
}

.item-listImg {
    width: 150rpx;
    height: 150rpx;
    margin-top: 30rpx;
    margin-right: 20rpx;
    z-index: 10;
}
</style>
<template>
    <view class="container">
        <navBar :navTitle.sync="label" isChildPage="y"></navBar>
        <view class="search-container">
            <navigator class="search_content" url="/pages/search">
                <icon type="search" size="15" class="search-icon" />
                <view class="search_input">搜索感兴趣的内容</view>
            </navigator>
        </view>
        <view class="label-follow">
            <view wx:if="{{!isFollow}}" class="follow-btn follow-no" @tap="followTag">
                <text class="fa fa-plus"></text> 关注</view>
            <view wx:else class="follow-btn follow-yes" @tap="followTag">已关注</view>
        </view>
        <view class="label-content">
            <repeat for="{{tags}}" key="tag">
                <navigator class="label-items" @tap="navToUser({{item.name}}, {{item.imgUrl}}, {{item.tag}}, {{item.userdesc}})">
                    <image class="item-avatar" src="{{item.imgUrl}}">
                        <view class="item-content">
                            <view class="item-tag">{{item.tag}}</view>
                            <view class="item-detail">{{item.name}}
                                <view class="item-userdesc">{{item.userdesc}}</view>
                            </view>
                            <view class="item-desc">{{item.desc}}</view>
                            <repeat for="{{item.imageList}}" item="imageList" key="imageUrl">
                                <image src="{{imageList.imageUrl}}" class="item-listImg" data-list="{{item.imageList}}" @tap.stop="picPreview({{imageList.imageUrl}})">
                            </repeat>
                        </view>
                </navigator>
            </repeat>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api'

export default class Label extends wepy.page {
    config = {
        navigationBarTitleText: '搜索'
    };
    components = {
        navBar: NavBar
    };

    data = {
        isFollow: false,
        label: '',
        tags: [
            {
                name: 'Clarenceyang',
                tag: '摄影',
                imgUrl: '/icons/assets/user_1.jpg',
                userdesc: '爱生活，爱摄影，爱美食',
                desc: '从初中开始接触摄影的非专业风景取景爱好者，准确快门专家 装备：佳能70D，佳能定焦、变焦镜头若干',
                imageList: [
                    {
                        imageUrl: '/icons/assets/label1_pic_1.png'
                    },
                    {
                        imageUrl: '/icons/assets/label1_pic_2.png'
                    },
                    {
                        imageUrl: '/icons/assets/label1_pic_3.png'
                    }
                ]
            },
            {
                name: '雪白的狐狸',
                tag: '美食摄影',
                imgUrl: '/icons/assets/user_2.jpg',
                userdesc: '拍照片儿的，一本正经的卖萌',
                desc:
                    '职业美食摄影师，生长工作于北京 美食摄影是通过摄影师拍的照片这个载体，展现食物本身提供的信息，很多信息是普通大众不会去注意的，同样一种美食，从不同的角度去拍，展现的效果也是不同的',
                imageList: [
                    {
                        imageUrl: '/icons/assets/label2_pic_1.png'
                    },
                    {
                        imageUrl: '/icons/assets/label2_pic_2.png'
                    },
                    {
                        imageUrl: '/icons/assets/label2_pic_3.png'
                    }
                ]
            }
        ],
        preImgList: []
    };

    computed = {};

    methods = {
        async followTag() {
            // this.isFollow = !this.isFollow;

            var jwt = wx.getStorageSync('jwt');
            let self = this;
            if (jwt.data.access_token != null) {
                console.log(jwt.data.account_id);
                let res = await api.changeFollowStatus({
                    query: {
                        access_token: jwt.data.access_token,
                        account_id: jwt.data.account_id,
                        tagName: this.label
                    }
                });
                console.log('-------------');
                console.log(res);
                self.isFollow = res.data.isFollow;
                self.$apply();
            }
            self.$apply();

            this.$apply();
        },

        picPreview(url, e) {
            var imageList = e.currentTarget.dataset.list;

            imageList.forEach((item, index) => {
                this.preImgList.push(item.imageUrl);
            });
            this.$apply();
            wx.previewImage({
                current: url,
                urls: this.preImgList
            });
        },

        navToUser(name, url, tag, desc, event) {
            wx.navigateTo({
                url:
                    '/pages/person/person?id=' +
                    name +
                    '&url=' +
                    url +
                    '&tag=' +
                    tag +
                    '&desc=' +
                    desc
            });
        }
    };

    events = {};

    async onLoad(options) {
        this.label = options.id;
        var jwt = wx.getStorageSync('jwt');
        let self = this;
        console.log(this.label);
        if (jwt.data.access_token != null) {
            console.log(jwt.data.account_id);
            let res = await api.getFollowStatus({
                query: {
                    access_token: jwt.data.access_token,
                    account_id: jwt.data.account_id,
                    tagName: this.label
                }
            });
            console.log('-------------');
            console.log(res);
            self.isFollow = res.data.isFollow;
            self.$apply();
        }
        this.$apply();
    }
}
</script>