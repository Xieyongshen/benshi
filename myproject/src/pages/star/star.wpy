<style lang="less">
page {
    background: #fafafa;
}

.container {
    padding-top: 255rpx;
}

.star-func {
    width: 100%;
    height: 100rpx;
    background: #ffffff;
    padding: 10rpx 30rpx;
    box-shadow: 0 1rpx 1rpx #a8a7a7;
    box-sizing: border-box;
    position: fixed;
    top: 147rpx;
    z-index: 99;
}

.star-chooseType {
    height: 80rpx;
    font-size: 34rpx;
    line-height: 80rpx;
    display: inline-block;
}

.star-chooseType .fa {
    font-size: 30rpx;
    margin-left: 10rpx;
}

.star-manage {
    height: 80rpx;
    font-size: 34rpx;
    line-height: 80rpx;
    float: right;
}

.manage-selectCur {
    width: 750rpx;
    height: 160rpx;
    overflow: hidden;
    white-space: nowrap;
}

.manage-selectCur:hover {
    background-color: rgba(0, 0, 0, 0.1);
    opacity: 0.7;
}

.selectCur-choose {
    width: 80rpx;
    height: 160rpx;
    text-align: center;
    vertical-align: top;
    padding: 50rpx 0 50rpx 30rpx;
    box-sizing: border-box;
    display: inline-block;
}

.labelList-items {
    width: 100%;
    height: 160rpx;
    border-bottom: 1px solid #d2d2d2;
    display: inline-block;
}

.labelItem-img {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    margin: 30rpx 40rpx;
    box-sizing: border-box;
}

.labelItem-details {
    width: 570rpx;
    height: 160rpx;
    padding: 20rpx 40rpx 20rpx 0;
    vertical-align: top;
    display: inline-block;
    box-sizing: border-box;
}

.labelItem-label {
    width: 530rpx;
    font-size: 36rpx;
    line-height: 60rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.labelItem-detail {
    width: 530rpx;
    font-size: 32rpx;
    line-height: 60rpx;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.labelItem-desc {
    font-size: 32rpx;
    line-height: 60rpx;
    color: #999999;
    margin-left: 20rpx;
    display: inline-block;
}

.star-typeList {
    width: 100%;
    padding: 20rpx;
    box-sizing: border-box;
}

.typeList-items {
    width: 325rpx;
    height: 80rpx;
    font-size: 34rpx;
    line-height: 78rpx;
    text-align: center;
    background: #ffffff;
    margin: 10rpx 15rpx;
    border-radius: 15rpx;
    box-sizing: border-box;
    display: inline-block;
}

.typeItem-choose {
    color: #b28850;
    border: 1rpx solid #d1c0a5;
}

.star-manageBtn {
    width: 100%;
    height: 100rpx;
    background: #ffffff;
    padding: 15rpx 30rpx;
    box-sizing: border-box;
    position: fixed;
    bottom: 0;
    z-index: 99;
    checkbox-group {
        display: inline-block;
    }
}

.manage-selectAll {
    height: 70rpx;
    font-size: 34rpx;
    line-height: 70rpx;
    display: inline-block;
}

.selectAll-choose {
    margin-right: 20rpx;
}

checkbox .wx-checkbox-input {
    width: 40rpx;
    height: 40rpx;
    border-radius: 50%;
}

.manage-delete {
    height: 70rpx;
    color: #ffffff;
    font-size: 34rpx;
    line-height: 70rpx;
    padding: 0 40rpx;
    background: #d0b287;
    border-radius: 10rpx;
    float: right;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="我的收藏" isChildPage="y"></navBar>
        <view class="star-func">
            <view class="star-chooseType" @tap="chooseType">{{typeList[currentIndex]}}
                <text class="fa fa-caret-{{isChoosing?'up':'down'}}" aria-hidden="true"></text>
            </view>
            <view class="star-manage" @tap="manageStar">管理</view>
        </view>
        <view class="star-content">
            <view wx:if="{{isChoosing == false}}" class="star-labelList">
                <checkbox-group bindchange="changeSelect">
                    <repeat for="{{star}}" key="type" index="idx">
                        <block wx:if="{{currentIndex == 0 || idx == currentIndex - 1}}">
                            <repeat for="{{item.labelList}}" item="labelList" key="label" index="labelIdx">
                                <view wx:if="{{isManaging == true}}" class="manage-selectCur">
                                    <label>
                                        <view class="selectCur-choose">
                                            <checkbox value="{{labelList.labelId}}" checked="{{selectAll}}" />
                                        </view>
                                        <view class="labelList-items">
                                            <image src="{{labelList.imgUrl}}" class="labelItem-img">
                                                <view class="labelItem-details">
                                                    <view class="labelItem-label">{{labelList.label}}</view>
                                                    <view class="labelItem-detail">{{labelList.name}}
                                                        <view class="labelItem-desc">{{labelList.description}}</view>
                                                    </view>
                                                </view>
                                        </view>
                                    </label>
                                </view>
                                <navigator wx:else class="labelList-items" @tap="navToUser({{labelList.userId}}, {{labelList.name}}, {{labelList.imgUrl}}, {{labelList.label}})">
                                    <image src="{{labelList.imgUrl}}" class="labelItem-img">
                                        <view class="labelItem-details">
                                            <view class="labelItem-label">{{labelList.label}}</view>
                                            <view class="labelItem-detail">{{labelList.name}}
                                                <view class="labelItem-desc">{{labelList.description}}</view>
                                            </view>
                                        </view>
                                </navigator>
                            </repeat>
                        </block>
                    </repeat>
                </checkbox-group>
            </view>
            <view wx:else class="star-typeList">
                <repeat for="{{typeList}}" key="index" index="idx">
                    <view class="typeList-items {{idx == currentIndex?'typeItem-choose':''}}" @tap="selectType({{idx}})">{{item}}</view>
                </repeat>
            </view>
        </view>
        <view wx:if="{{isManaging == true}}" class="star-manageBtn">
            <checkbox-group bindchange="selectAllLabel">
                <label class="manage-selectAll">
                    <checkbox class="selectAll-choose" />全选
                </label>
            </checkbox-group>
            <view class="manage-delete" @tap="deleteLabel">删除</view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';

export default class Star extends wepy.page {
    config = {};
    components = {
        navBar: NavBar
    };

    data = {
        currentIndex: 0,
        typeList: [],
        selectList: [],
        isChoosing: false,
        isManaging: false,
        selectAll: false,
        star: [
            // {
            //     type: '外语类',
            //     labelList: [
            //         {
            //             name: 'Jarvis',
            //             imgUrl: '/icons/assets/user_5.jpg',
            //             label: '100天奋战TOEFL',
            //             description: '备考进行中！'
            //         }
            //     ]
            // },
            // {
            //     type: '才艺类',
            //     labelList: []
            // },
            // {
            //     type: '生活技能',
            //     labelList: [
            //         {
            //             name: 'Clarenceyang',
            //             imgUrl: '/icons/assets/user_1.jpg',
            //             label: '摄影',
            //             description: '爱生活，爱摄影，爱美食的三爱人士'
            //         }
            //     ]
            // },
            // {
            //     type: '经验分享',
            //     labelList: [
            //         {
            //             name: '范臻',
            //             imgUrl: '/icons/assets/user_5.jpg',
            //             label: '三国杀',
            //             description: '奇策火攻，酒杀不闪。'
            //         }
            //     ]
            // },
            // {
            //     type: '专业知识',
            //     labelList: [
            //         {
            //             name: '松鹅',
            //             imgUrl: '/icons/assets/user_2.jpg',
            //             label: '用Python解决你的所有问题',
            //             description: '最近在学摄影的话痨程序员'
            //         },
            //         {
            //             name: '温酒',
            //             imgUrl: '/icons/assets/user_3.jpg',
            //             label: '编剧',
            //             description: '希望做一个温柔的人，想给你讲一万个故事。'
            //         },
            //         {
            //             name: '喻以流年',
            //             imgUrl: '/icons/assets/user_4.jpg',
            //             label: '历史',
            //             description: '在《资治通鉴》里，探寻当下与未来。'
            //         }
            //     ]
            // }
        ]
    };

    computed = {};

    methods = {
        chooseType() {
            this.isChoosing = !this.isChoosing;
            this.$apply();
        },

        selectType(index, e) {
            this.currentIndex = index;
            this.isChoosing = !this.isChoosing;
            this.$apply();
        },

        manageStar() {
            if (!this.isManaging) {
                this.selectList = [];
            }
            this.isManaging = !this.isManaging;
            this.$apply();
        },

        changeSelect(e) {
            this.selectList = e.detail.value;
            console.log('Select: ' + this.selectList);
        },

        navToUser(uid, name, url, label, event) {
            console.log(uid);
            wx.navigateTo({
                url:
                    '/pages/person/person?id=' +
                    uid +
                    '&name=' +
                    name +
                    '&url=' +
                    url +
                    '&label=' +
                    label
            });
        },

        selectAllLabel() {
            this.selectAll = !this.selectAll;
            this.selectList = [];
            if (this.selectAll) {
                this.star.forEach((item, index) => {
                    item.labelList.forEach((labelItem, labelIndex) => {
                        this.selectList.push(labelItem.labelId);
                    });
                });
            }
            this.$apply();
        },

        deleteLabel() {
            for (let i = this.star.length - 1; i >= 0; i--) {
                const item = this.star[i];
                for (
                    let labelIndex = item.labelList.length - 1;
                    labelIndex >= 0;
                    labelIndex--
                ) {
                    const labelItem = item.labelList[labelIndex];
                    this.selectList.every((element, eleIndex) => {
                        if (element == labelItem.labelId) {
                            console.log(
                                'Find to delete: ' + eleIndex + ' - ' + element
                            );
                            console.log(
                                'Delete: ' +
                                    labelItem.label +
                                    ' - ' +
                                    labelItem.labelId
                            );
                            item.labelList.splice(labelIndex, 1);
                            if (item.labelList.length == 0) {
                                this.star.splice(i, 1);
                                this.typeList.splice(i + 1, 1);
                            }
                            this.$apply();
                            return false;
                        }
                        return true;
                    });
                }
            }
            console.log('selectList: ' + this.selectList);
            console.log(this.star);

            this.selectList = [];
        }
    };

    events = {};

    async onLoad() {
        var jwt = wx.getStorageSync('jwt');
        let self = this;
        if (jwt.data.access_token != null) {
            //检查 jwt 是否存在 如果不存在调用登录
            // that.login();
            console.log(jwt.data.account_id);
            let res = await api.getStar({
                query: {
                    access_token: jwt.data.access_token,
                    account_id: jwt.data.account_id
                }
            });
            console.log('-------------');
            console.log(res);
            self.star = res.data;
            console.log(self.star);
            self.$apply();
        }

        this.star.forEach((item, index) => {
            this.typeList.push(item.type);
        });
    }

    onReady() {
        this.typeList.push('全部分类');
    }
}
</script>