<style lang="less">
.container {
    padding-top: 150rpx;
}

.userinfo {
    width: 100%;
    text-align: center;
    background-color: #ffffff;
    padding: 40rpx 40rpx 0 40rpx;
    box-sizing: border-box;
}

.userinfo-avatar {
    width: 150rpx;
    height: 150rpx;
    margin: 20rpx 0;
}

.userinfo-username {
    font-size: 36rpx;
    line-height: 50rpx;
}

.userinfo-desc {
    color: #7d7d7d;
    font-size: 32rpx;
    line-height: 50rpx;
    margin: 20rpx 0;
}

.user-labelList {
    width: 750rpx;
    height: 100rpx;
    background: #ffffff;
    border-bottom: 1rpx solid #e5e5e5;
    overflow: hidden;
    white-space: nowrap;
    z-index: 90;
    position: relative;
}

.list-sticky {
    position: fixed;
    top: 150rpx;
}

.labelList-content {
    width: 600rpx;
    box-sizing: border-box;
    display: inline-block;
}

.labelList-items {
    width: 150rpx;
    height: 100rpx;
    font-size: 32rpx;
    line-height: 100rpx;
    text-align: center;
    padding: 0 5rpx;
    background-color: #ffffff;
    box-sizing: border-box;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.labelList-catalog {
    vertical-align: top;
}

.labelMoreLeft,
.labelMoreRight {
    width: 30rpx;
    height: 100rpx;
    line-height: 100rpx;
    text-align: center;
    background-color: #ffffff;
    position: absolute;
    top: 0;
    z-index: 90;
}

.labelMoreRight {
    right: 0;
}

.labelMoreLeft {
    left: 150rpx;
}

.user-labelContent {
    width: 750rpx;
    height: auto;
    overflow: hidden;
    white-space: nowrap;
    position: relative;
}

.labelContent-items {
    width: 750rpx;
    display: inline-block;
    vertical-align: top;
}

.labelContent-list {
    margin-top: 40rpx;
    vertical-align: top;
    border-top: 1rpx solid #e5e5e5;
    border-bottom: 1rpx solid #e5e5e5;
}

.list-items {
    width: 100%;
    height: 100rpx;
    background: #ffffff;
    padding-left: 40rpx;
    box-sizing: border-box;
}

.listItem-content {
    font-size: 32rpx;
    line-height: 98rpx;
}

.list-items:not(:last-child) .listItem-content {
    border-bottom: 1rpx solid #e5e5e5;
}

.listItem-navto {
    width: 30rpx;
    height: 30rpx;
    float: right;
    margin: 35rpx 40rpx;
}

.labelItem-service {
    width: 750rpx;
    margin-top: 40rpx;
    padding: 30rpx;
    background: #ffffff;
    border-top: 1rpx solid #d2d2d2;
    border-bottom: 1rpx solid #d2d2d2;
    box-sizing: border-box;
    white-space: normal;
    position: relative;
}

.service-title {
    color: #cfa972;
    font-size: 40rpx;
    line-height: 60rpx;
    margin-bottom: 20rpx;
}

.service-more {
    color: #cfa972;
    font-size: 32rpx;
    line-height: 60rpx;
    position: absolute;
    top: 30rpx;
    right: 30rpx;
}

.service-null {
    padding-left: 80rpx;
    font-size: 32rpx;
}

.service-items {
    height: 70rpx;
    font-size: 32rpx;
    line-height: 68rpx;
    margin: 10rpx 30rpx 10rpx 0;
    padding: 0 50rpx;
    border: 1rpx solid #000000;
    border-radius: 10rpx;
    box-sizing: border-box;
    display: inline-block;
}

.labelItem-content {
    width: 750rpx;
    margin-top: 40rpx;
    background: #ffffff;
    border-top: 1rpx solid #d2d2d2;
}

.itemContent-intro {
    width: 750rpx;
    padding: 30rpx;
    border-bottom: 1rpx solid #d2d2d2;
    box-sizing: border-box;
    white-space: normal;
}

.intro-title {
    color: #cfa972;
    font-size: 40rpx;
    line-height: 70rpx;
    display: inline-block;
}

.label-star {
    float: right;
    height: 70rpx;
    color: #b28850;
    font-size: 32rpx;
    line-height: 68rpx;
    padding: 0 20rpx;
    border: 1rpx solid #cfa972;
    border-radius: 10rpx;
    background: #ffffff;
    box-sizing: border-box;
    float: right;
}

.label-star:hover {
    color: #ffffff;
    background: #cfa972;
}

.star-true {
    color: #535353;
    border: 1rpx solid #535353;
}

.star-true:hover {
    color: #ffffff;
    background: #535353;
}

.intro-desc {
    font-size: 32rpx;
    line-height: 50rpx;
    margin-top: 20rpx;
    padding-left: 80rpx;
}

.post-items {
    width: 750rpx;
    padding: 30rpx;
    border-bottom: 1rpx solid #d2d2d2;
    box-sizing: border-box;
    white-space: normal;
}

.post-time {
    font-size: 40rpx;
    line-height: 60rpx;
    margin-bottom: 20rpx;
}

.post-content {
    font-size: 32rpx;
    line-height: 50rpx;
    padding-left: 80rpx;
}

.post-listImg {
    width: 300rpx;
    height: 300rpx;
    margin-top: 20rpx;
    margin-right: 20rpx;
    z-index: 10;
}

.list-current {
    color: #cfa972;
    border-bottom: 1rpx solid #cfa972;
    box-sizing: border-box;
}
</style>
<template>
    <view class="container">
        <navBar :navTitle.sync="userName" isChildPage="y"></navBar>
        <view class="userinfo">
            <image src="{{userUrl}}" class="userinfo-avatar">
                <view class="userinfo-username">{{userName}}</view>
                <view class="userinfo-desc">{{userDesc}}</view>
        </view>

        <view class="user-labelList {{listSticky === true?'list-sticky':''}}">
            <view class="labelList-catalog labelList-items {{currentLabel == 0?'list-current':''}}" @tap.stop="clickScrollInTo" data-id="list" data-idx='0'>目录</view>
            <view wx:if="{{noLeft === false}}" class="labelMoreLeft">
                <text class="fa fa-angle-left more-icon"></text>
            </view>
            <view wx:if="{{noRight === false}}" class="labelMoreRight">
                <text class="fa fa-angle-right more-icon"></text>
            </view>
            <scroll-view class="labelList-content" scroll-x='true' scroll-into-view="{{lScrollInTo}}" scroll-with-animation="true" bindscroll="showLabel" bindscrolltoupper="scrollToLeft" bindscrolltolower="scrollToRight">
                <repeat for="{{labels}}" key="name">
                    <view class="labelList-items {{currentLabel == index + 1?'list-current':''}}" id="{{'list-' + item.id}}" @tap.stop="clickScrollInTo" data-id="{{item.id}}" data-idx="{{index + 1}}">{{item.name}}</view>
                </repeat>
            </scroll-view>
        </view>

        <view class="user-labelContent">
            <scroll-view class="labelContent-content" scroll-x="true" scroll-into-view="{{scrollInTo}}" scroll-with-animation="true" bindscroll="nextPage">
                <view class="labelContent-list labelContent-items" id="list">
                    <repeat for="{{labels}}" key="name">
                        <navigator class="list-items" @tap="toLabel({{index}}, {{item.id}})">
                            <view class="listItem-content">
                                <text>{{item.name}}</text>
                                <image class="listItem-navto" src="/icons/ic_path.png">
                            </view>
                        </navigator>
                    </repeat>
                </view>
                <repeat for="{{labels}}" key="name" index="labelIdx">
                    <view class="labelContent-items" id="{{item.id}}">
                        <view class="labelItem-service">
                            <view class="service-title">服务</view>
                            <view wx:if="{{item.service.length > 0}}" class="service-more" @tap="navToService(0, {{userid}})">查看全部</view>
                            <view wx:if="{{item.service.length == 0}}" class="service-null">暂无服务</view>
                            <repeat for="{{item.service}}" item="service" key="name" index="sIndex">
                                <view class="service-items" @tap="navToService({{labelIdx}},{{userid}})">{{service.name}}</view>
                            </repeat>
                        </view>
                        <view class="labelItem-content">
                            <view class="itemContent-intro">
                                <view class="intro-title">{{item.name}}</view>
                                <button class="label-star {{item.isStared?'star-true':''}}" open-type="getUserInfo" @tap="starLabel({{labelIdx}})" id="{{item.id}}">
                                    <block wx:if="{{!item.isStared}}">
                                        <text class="fa fa-star-o"></text> 收藏</block>
                                    <block wx:else>已收藏</block>
                                </button>
                                <view class="intro-desc">{{item.desc}}</view>
                            </view>
                            <repeat for="{{item.post}}" item="post" key="postID">
                                <view class="post-items">
                                    <view class="post-time">{{post.time}} 更新</view>
                                    <view class="post-content">
                                        <view class="post-desc">{{post.desc}}</view>
                                        <repeat for="{{post.imgList}}" item="imgList" key="imageUrl">
                                            <image src="{{imgList.imageUrl}}" mode="aspectFill" class="post-listImg" data-list="{{post.imgList}}" @tap.stop="picPreview({{imgList.imageUrl}})">
                                        </repeat>
                                    </view>
                                </view>
                            </repeat>
                        </view>
                    </view>
                </repeat>
            </scroll-view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';
import login from '@/api/login';

export default class Person extends wepy.page {
    config = {};
    components = {
        navBar: NavBar
    };

    data = {
        userid: '',
        userName: '',
        userUrl: '',
        userDesc: '',
        chooseLabel: '',
        isStar: false,
        labels: [],
        listSticky: false,
        noLeft: true,
        noRight: false,
        preImgList: [],
        labelIDList: [],
        currentLabel: 0,
        lScrollInTo: '',
        scrollInTo: '',
        isScrolling: false,
        listTop: 0
    };

    computed = {};

    methods = {
        showLabel(e) {
            var left = e.detail.scrollLeft;
            var width = e.detail.scrollWidth;
            if (left > 30) {
                this.noLeft = false;
            }
            if (left < width - 30) {
                this.noRight = false;
            }
            this.$apply();
        },
        scrollToLeft() {
            this.noLeft = true;
            this.$apply();
        },
        scrollToRight() {
            this.noRight = true;
            this.$apply();
        },

        picPreview(url, e) {
            var imageList = e.currentTarget.dataset.list;

            imageList.forEach((item, index) => {
                this.preImgList.push(item.imageUrl);
            });
            this.$apply();
            wx.previewImage({
                current: url,
                urls: this.preImgList
            });
        },
        clickScrollInTo(e) {
            this.currentLabel = e.currentTarget.dataset.idx;
            this.scrollInTo = e.currentTarget.dataset.id;
            this.lScrollInTo = 'list-' + this.scrollInTo;
            this.$apply();
        },
        nextPage(e) {
            var self = this;
            if (self.isScrolling == false) {
                self.isScrolling = true;
                var scrollX = e.detail.deltaX;
                var sWidth = wx.getSystemInfoSync().windowWidth;
                if (
                    scrollX < 0 &&
                    scrollX > -sWidth + 5 &&
                    self.currentLabel < self.labelIDList.length - 1
                ) {
                    self.currentLabel++;
                    self.scrollInTo = self.labelIDList[self.currentLabel].id;
                } else if (
                    scrollX > 0 &&
                    scrollX < sWidth - 5 &&
                    self.currentLabel > 0
                ) {
                    self.currentLabel--;
                    self.scrollInTo = self.labelIDList[self.currentLabel].id;
                }
                if (scrollX != 0 && self.scrollInTo != 'list') {
                    self.lScrollInTo = 'list-' + self.scrollInTo;
                }
                self.$apply();
                setTimeout(() => {
                    self.isScrolling = false;
                }, 500);
            }
        },
        toLabel(idx, id, e) {
            this.currentLabel = ++idx;
            this.scrollInTo = id;
            this.$apply();
        },
        navToService(index, userId, e) {
            wx.navigateTo({
                url:
                    '/pages/serviceList/serviceList?index=' +
                    index +
                    '&userId=' +
                    userId
            });
        },

        async starLabel(index, e) {
            var jwt = wx.getStorageSync('jwt');
            let self = this;
            try {
                if (jwt.data.access_token != null) {
                    this.labels[index].isStared = !this.labels[index].isStared;
                    var idStr = e.currentTarget.id.substring(6);
                    var labelID = parseInt(idStr);
                    let res = await api.changeStarStatus({
                        query: {
                            access_token: jwt.data.access_token,
                            account_id: jwt.data.account_id,
                            labelId: labelID
                        }
                    });
                    self.$apply();
                }
            } catch (error) {
                console.log(error);
                jwt = await login.login();
            }
            self.$apply();
        }
    };

    onPageScroll(options) {
        if (options.scrollTop <= 140) {
            this.listSticky = false;
        } else {
            this.listSticky = true;
        }
        this.$apply();
    }

    async onLoad(options) {
        this.userid = options.id;
        this.chooseLabel = options.label;
        this.scrollInTo = 'list';
        this.$apply();
        this.currentLabel = 0;
        var jwt = wx.getStorageSync('jwt');
        let self = this;
        try {
            if (jwt.data.access_token != null) {
                let res = await api.getPerson({
                    query: {
                        userId: self.userid,
                        access_token: jwt.data.access_token,
                        account_id: jwt.data.account_id
                    }
                });
                this.labels = res.data.labels;
                this.userName = res.data.userName;
                this.userUrl = res.data.userAvatar;
                this.userDesc = res.data.userDesc;
            }
        } catch (error) {
            console.log('jwt is null');

            let res = await api.get_personWithoutLogin({
                query: {
                    userId: self.userid
                }
            });
            this.labels = res.data.labels;
            this.userName = res.data.userName;
            this.userUrl = res.data.userAvatar;
            this.userDesc = res.data.userDesc;
        }

        this.labels.forEach(element => {
            element.id = 'labels' + element.id;
        });
        self.$apply();

        this.labels.forEach((item, index) => {
            this.labelIDList.push({ id: item.id });
        });

        this.labelIDList = [];
        this.labelIDList.push({ id: 'list' });
        this.labels.forEach((item, index) => {
            this.labelIDList.push({ id: item.id });
        });
        if (this.labels.length <= 4) {
            this.noRight = true;
        }

        this.labels.forEach((item, index) => {
            if (this.chooseLabel == item.name) {
                this.currentLabel = index + 1;
                this.scrollInTo = this.labelIDList[this.currentLabel].id;
            }
        });

        this.$apply();
    }
}
</script>