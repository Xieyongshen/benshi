<style lang="less">
page {
    background: #fafafa;
}

.container {
    padding-top: 255rpx;
}

.navBar {
    position: fixed;
    top: 0;
    z-index: 98;
}

.searchBox-container {
    width: 100%;
    padding: 20rpx 0;
    background-color: #ffffff;
    box-shadow: 0 1rpx 1rpx #a8a7a7;
    position: fixed;
    top: 147rpx;
    z-index: 99;
}

.searchBox-content {
    width: 690rpx;
    height: 70rpx;
    font-size: 32rpx;
    line-height: 70rpx;
    margin: 0 auto;
    padding: 0 30rpx 0 80rpx;
    background: #e5e5e5;
    opacity: 0.5;
    border-radius: 52rpx;
    box-sizing: border-box;
}

.searchBox-icon {
    position: absolute;
    top: 38rpx;
    left: 60rpx;
}

.searchBox-keyword {
    height: 50rpx;
    font-size: 32rpx;
    line-height: 48rpx;
    background: #ffffff;
    padding: 0 30rpx;
    border: 1rpx solid #d1c0a5;
    border-radius: 40rpx;
    box-sizing: border-box;
    position: absolute;
    top: 30rpx;
    left: 110rpx;
}

.search-recommand {
    width: 100%;
    height: auto;
}

.search-history,
.search-hot {
    padding: 20rpx 30rpx;
    position: relative;
}

.history-title,
.hot-title {
    width: 100%;
    height: 60rpx;
    font-size: 32rpx;
    line-height: 60rpx;
    display: inline-block;
}

.history-clear,
.hot-clear {
    color: #b28850;
    font-size: 32rpx;
    line-height: 60rpx;
    position: absolute;
    top: 20rpx;
    right: 30rpx;
}

.history-clear:hover,
.hot-clear:hover {
    opacity: 0.5;
}

.recommand-keyword {
    width: auto;
    max-width: 690rpx;
    height: 60rpx;
    box-sizing: border-box;
    font-size: 28rpx;
    line-height: 60rpx;
    margin: 10rpx 0;
    padding: 0 20rpx;
    border: 1rpx solid #d1c0a5;
    border-radius: 30rpx;
    margin-right: 20rpx;
    background: #ffffff;
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.search-keyword {
    width: 100%;
    border-bottom: 1rpx solid #e5e5e5;
}

.search-items {
    background: #ffffff;
    padding-left: 30rpx;
}

.search-items:not(:last-child) .keyword-content {
    border-bottom: 1rpx solid #e5e5e5;
}

.keyword-content {
    height: 80rpx;
    font-size: 30rpx;
    line-height: 80rpx;
    box-sizing: border-box;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

.search-resItems {
    width: 100%;
    padding-left: 40rpx;
    box-sizing: border-box;
    position: relative;
}

.item-avatar {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    position: absolute;
    top: 40rpx;
    left: 40rpx;
}

.item-content {
    width: 710rpx;
    max-height: 700rpx;
    padding: 30rpx 40rpx 30rpx 130rpx;
    border-bottom: 1rpx solid #e5e5e5;
    box-sizing: border-box;
}

.item-tag {
    width: 540rpx;
    font-size: 36rpx;
    line-height: 50rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.item-detail {
    width: 540rpx;
    font-size: 32rpx;
    line-height: 50rpx;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.item-userdesc {
    font-size: 32rpx;
    line-height: 50rpx;
    color: #7d7d7d;
    margin-left: 20rpx;
    display: inline-block;
}

.item-desc {
    width: 540rpx;
    height: 150rpx;
    color: #434343;
    font-size: 32rpx;
    line-height: 50rpx;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
}

.item-listImg {
    width: 150rpx;
    height: 150rpx;
    margin-top: 30rpx;
    margin-right: 20rpx;
    z-index: 10;
}

.search-null {
    width: 750rpx;
    text-align: center;
    color: #d2d2d2;
    font-size: 36rpx;
    line-height: 200rpx;
}

.history-null {
    width: 750rpx;
    text-align: center;
    color: #d2d2d2;
    font-size: 32rpx;
    line-height: 80rpx;
}
</style>
<template>
    <view class="container">
        <!-- <search @searchValue.user="doSearch"></search> -->
        <navBar navTitle="搜索" isChildPage="y"></navBar>
        <view class="searchBox-container">
            <input type="text" value="{{searchValue}}" class="searchBox-content" focus="true" placeholder="{{showResult == false?'搜索你感兴趣的内容':''}}" confirm-type="search" bindfocus="searchClear" bindinput="searchInput" bindconfirm="searchResult">
            <icon type="search" size="15" class="searchBox-icon" />
            <view wx:if="{{searchDone}}" class="searchBox-keyword">{{keywordDone}}</view>
        </view>
        <block wx:if="{{showResult == false}}">
            <view wx:if="{{searchValue == ''}}" class="search-recommand">
                <view class="search-history">
                    <view class="history-title">历史搜索</view>
                    <view class="history-clear" @tap="historyClear">清除</view>
                    <view wx:if="{{history.length == 0}}" class="history-null">暂无搜索记录</view>
                    <repeat for="{{history}}" key="index">
                        <view class="recommand-keyword" @tap="selectSearch({{item}})">{{item}}</view>
                    </repeat>
                </view>
                <view class="search-hot">
                    <view class="hot-title">热门搜索</view>
                    <view class="hot-clear">换一换</view>
                    <repeat for="{{hot}}" key="index">
                        <view class="recommand-keyword" @tap="selectSearch({{item}})">{{item}}</view>
                    </repeat>
                </view>
            </view>
            <view wx:if="{{searchValue != ''}}" class="search-keyword">
                <repeat for="{{searchKeywords}}" key="index">
                    <navigator class="search-items" @tap="selectSearch({{item}})">
                        <view class="keyword-content">{{item}}</view>
                    </navigator>
                </repeat>
            </view>
        </block>
        <block wx:if="{{showResult == true}}">
            <view wx:if="{{searchResult.length == 0}}" class="search-null">暂无搜索结果</view>
            <view class="search-result">
                <repeat for="{{searchResult}}" key="tag">
                    <navigator class="search-resItems" @tap="navToUser({{item.userId}}, {{item.name}}, {{item.imgUrl}}, {{item.label}})">
                        <image class="item-avatar" src="{{item.imgUrl}}">
                            <view class="item-content">
                                <view class="item-tag">{{item.tag}}</view>
                                <view class="item-detail">{{item.name}}
                                    <view class="item-userdesc">{{item.userdesc}}</view>
                                </view>
                                <view class="item-desc">{{item.desc}}</view>
                                <repeat for="{{item.imageList}}" item="imageList" key="imageUrl">
                                    <image src="{{imageList.imageUrl}}" class="item-listImg" data-list="{{item.imageList}}" @tap.stop="picPreview({{imageList.imageUrl}})">
                                </repeat>
                            </view>
                    </navigator>
                </repeat>
            </view>
        </block>
    </view>
</template>

<script>
import wepy from 'wepy';
import NavBar from '@/components/navBar';
import api from '@/api/api';

export default class Search extends wepy.page {
    config = {
        navigationBarTitleText: '搜索'
    };
    components = {
        navBar: NavBar
    };

    data = {
        searchValue: '',
        keywordDone: '',
        searchDone: false,
        showResult: false,
        history: [],
        hot: [],
        searchKeywords: [
            'TOEFL',
            '拍照摄影',
            '茶艺',
            '收纳',
            'Javascript',
            'Objective-C',
            'Java'
        ],
        searchResult: [
            // {
            //     name: 'Clarenceyang',
            //     tag: '摄影',
            //     imgUrl: '/icons/assets/user_1.jpg',
            //     userdesc: '爱生活，爱摄影，爱美食',
            //     desc:
            //         '从初中开始接触摄影的非专业风景取景爱好者，准确快门专家 装备：佳能70D，佳能定焦、变焦镜头若干',
            //     imageList: [
            //         {
            //             imageUrl: '/icons/assets/label1_pic_1.png'
            //         },
            //         {
            //             imageUrl: '/icons/assets/label1_pic_2.png'
            //         },
            //         {
            //             imageUrl: '/icons/assets/label1_pic_3.png'
            //         }
            //     ]
            // }
        ],
        preImgList: []
    };

    computed = {
        now() {
            return +new Date();
        }
    };

    methods = {
        historyClear() {
            this.history = [];
            wx.setStorage({
                key: 'history',
                data: history
            });
            this.$apply();
        },

        searchClear(e) {
            if (this.showResult) {
                this.searchDone = false;
                this.keywordDone = '';
                this.showResult = false;
                this.$apply();
            }
        },

        searchInput(e) {
            this.searchValue = e.detail.value;
            this.$apply();
        },

        searchResult(e) {
            this.doSearch(this.searchValue);
        },

        selectSearch(name, e) {
            this.doSearch(name);
        },

        picPreview(url, e) {
            var imageList = e.currentTarget.dataset.list;

            imageList.forEach((item, index) => {
                this.preImgList.push(item.imageUrl);
            });
            this.$apply();
            wx.previewImage({
                current: url,
                urls: this.preImgList
            });
        },

        navToUser(uid, name, url, label, event) {
            console.log(uid);
            wx.navigateTo({
                url:
                    '/pages/person/person?id=' +
                    uid +
                    '&name=' +
                    name +
                    '&url=' +
                    url +
                    '&label=' +
                    label
            });
        }
    };

    async doSearch(keyword) {
        console.log(keyword);
        var self = this;
        let res = await api.getSearchResult({
            query: {
                searchValue: keyword,
                searchType: 1
            }
        });
        console.log('-------------');
        console.log(res.data);
        self.searchResult = res.data;
        self.keywordDone = keyword;
        self.showResult = true;
        self.searchDone = true;
        self.history.push(keyword);
        self.$apply();
        wx.setStorage({
            key: 'history',
            data: history
        });
    }

    events = {};

    async onLoad() {

        var self = this;
        wx.getStorage({
            key: 'history',
            success: function(res) {
                console.log(res.data);
                self.history = res.data == null ? [] : res.data;
                console.log(self.history);
                self.$apply();
            },
            fail: function(res) {
                console.log(res.errMsg);
                self.history = [];
            }
        });
        
        let result = await api.getHotSearch({});
        console.log('-------------');
        console.log(result.data);
        self.hot = result.data;
                self.$apply();
    }
}
</script>