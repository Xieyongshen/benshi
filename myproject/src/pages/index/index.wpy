<style lang="less">
.container {
    padding-top: 150rpx;
}

.search_content {
    width: 690rpx;
    height: 70rpx;
    margin: 20rpx auto;
    padding: 0 30rpx;
    color: #8c877e;
    text-align: left;
    background: #e5e5e5;
    opacity: 0.5;
    border-radius: 52rpx;
    box-sizing: border-box;
    position: absolute;
    top: 147rpx;
    z-index: 10;
}

.search-icon {
    height: 70rpx;
    line-height: 70rpx;
    padding: 18rpx 0;
    box-sizing: border-box;
    vertical-align: top;
}

.search_input {
    font-size: 32rpx;
    line-height: 70rpx;
    display: inline-block;
    vertical-align: top;
    margin-left: 20rpx;
}

.topScroll {
    width: 750rpx;
    height: 400rpx;
}

.scrollNav {
    position: relative;
}

.scrollImg {
    width: 750rpx;
    height: 400rpx;
}

.scrollTitle {
    width: 750rpx;
    color: #ffffff;
    font-size: 36rpx;
    padding: 0 40rpx;
    position: absolute;
    bottom: 70rpx;
    z-index: 10;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.updateMessages {
    color: #888888;
    font-size: 30rpx;
    width: 100%;
    height: 70rpx;
    padding: 15rpx 15rpx;
    box-sizing: border-box;
    .fa{
        margin-right: 10rpx;
    }
}

.index-recommand {
    width: 100%;
}

.recommand-title {
    font-size: 32rpx;
    width: 100%;
    height: 70rpx;
    padding: 15rpx 40rpx;
    box-sizing: border-box;
}

.recommand-items {
    width: 100%;
    height: 160rpx;
}

.userItem-img {
    width: 100rpx;
    height: 100rpx;
    border-radius: 50%;
    margin: 30rpx 40rpx;
    box-sizing: border-box;
}

.userItem-details {
    width: 570rpx;
    height: 160rpx;
    padding: 20rpx 40rpx 20rpx 0;
    vertical-align: top;
    display: inline-block;
    border-bottom: 1px solid #a5a5a5;
    box-sizing: border-box;
}

.userItem-tag {
    width: 530rpx;
    font-size: 36rpx;
    line-height: 60rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.userItem-detail {
    width: 530rpx;
    font-size: 32rpx;
    line-height: 60rpx;
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.userItem-desc {
    font-size: 32rpx;
    line-height: 60rpx;
    color: #999999;
    margin-left: 20rpx;
    display: inline-block;
}

.recommand-more {
    width: 750rpx;
    color: #999999;
    font-size: 28rpx;
    line-height: 100rpx;
    text-align: center;
}

.recommand-more:hover {
    background: #e5e5e5;
    opacity: 0.5;
}
</style>
<template>
    <view class="container">
        <navBar navTitle="本事"></navBar>
        <navigator class="search_content" url="/pages/search">
            <icon type="search" size="15" class="search-icon" />
            <view class="search_input">搜索感兴趣的内容</view>
        </navigator>
        <swiper indicator-dots="true" indicator-active-color="#ffffff" autoplay="true" interval="5000" duration="1000" circular="true" class="topScroll">
            <swiper-item class="scrollItem" wx:for="{{scroll}}" wx:key="imgUrl">
                <navigator url="{{item.url}}" class="scrollNav">
                    <image src="{{item.imgUrl}}" mode="scaleToFill" class="scrollImg">
                        <view class="scrollTitle">{{item.desc}}</view>
                </navigator>
            </swiper-item>
        </swiper>

        <navigator class="updateMessages" @tap="navToUser({{currentUpdate.userId}}, {{currentUpdate.tag}})">
            <view><text class="fa fa-angle-right"></text> {{currentUpdate.name}} 更新了标签 {{currentUpdate.tag}}</view>
        </navigator>

        <view class="index-recommand">
            <view class="recommand-title">标签推荐</view>
            <repeat for="{{recommandUsers}}" key="recommandUsers">
                <navigator wx:if="{{index < maxItems}}" class="recommand-items" @tap="navToUser({{item.userId}}, {{item.tag}})">
                    <image src="{{item.imgUrl}}" class="userItem-img">
                        <view class="userItem-details">
                            <view class="userItem-tag">{{item.tag}}</view>
                            <view class="userItem-detail">{{item.name}}
                                <view class="userItem-desc">{{item.description}}</view>
                            </view>
                        </view>
                </navigator>
            </repeat>
        </view>

        <view class="recommand-more" @tap="showMore">{{maxItems <= recommandUsers.length ? '点击查看更多' : '暂无更多推荐'}}</view>
    </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api';
import NavBar from '@/components/navBar';
import { SYSTEM_INFO, USER_SPECICAL_INFO, USER_INFO } from '@/utils/constant';

export default class Index extends wepy.page {
    config = {};
    components = {
        navBar: NavBar
    };

    data = {
        maxItems: 10,
        scroll: [
            {
                url: '',
                imgUrl: '/icons/assets/pic_1.jpg',
                desc: '银河猎人：专访星空摄影师Will Chou'
            },
            {
                url: '',
                imgUrl: '/icons/assets/pic_2.jpg',
                desc: '银河猎人：专访星空摄影师Will Chou'
            },
            {
                url: '',
                imgUrl: '/icons/assets/pic_3.jpg',
                desc: '银河猎人：专访星空摄影师Will Chou'
            }
        ],
        recommandUsers: [],
        currentUpdate: {}
    };

    methods = {
        showMore() {
            this.maxItems += 10;
        },
        navToUser(uid, label, event) {
            console.log(uid);
            wx.navigateTo({
                url: '/pages/person/person?id=' + uid + '&label=' + label
            });
        }
    };

    onShareAppMessage() {
        return {
            title: '本事',
            path: '/pages/index/index'
        };
    }

    refreshUpdate() {
        var recommand = this.recommandUsers;
        var i = Math.round(Math.random() * recommand.length);
        this.currentUpdate = recommand[i];
        console.log(this.currentUpdate);
        this.$apply();
    }

    async onLoad() {
        let self = this;
        let res = await api.getIndex();
        console.log('-------------');
        console.log(res);
        console.log('-------------');
        self.recommandUsers = res.data;
        console.log(res.data);
        // self.categories = res.data
        self.currentUpdate = self.recommandUsers[0];
        self.$apply();
        setInterval(function() {
            var recommand = self.recommandUsers;
            var i = Math.round(Math.random() * recommand.length);
            self.currentUpdate = recommand[i];
            self.$apply();
        }, 5000);
    }

    onReady() {}
}
</script>
